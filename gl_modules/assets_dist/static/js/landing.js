/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./gl_modules/charts/static/js/charts.js":
/*!***********************************************!*\
  !*** ./gl_modules/charts/static/js/charts.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*FUNCTIONS FOR INTERACTIONS WITH CHARTS\n* DISPLAYING HOW DO WORLD COUNTRIES FEEL */\n\n\n(function () {\n    $.postJSON = function (url, data, func) {\n        $.post(url, data, func, 'json');\n    }\n\n    var list_of_locations = $('#list_of_locations')\n\n    /*CLICKING ON charts BUTTON UNDER GLOBE, OR BUTTONS NEXT TO THE CHART ON THE RIGHT\n    * 2 OPTIONS :\n    *       1. WORLD FEEL DAYS (30,90....)\n    *       2. COUNTRIES TOP 10,30,ALL...*/\n    $('.chart').on('click', function () {\n\n        if (screen.width < 768) $('.chart').get(0).scrollIntoView(1, 'slow')\n        /*HIDE WRITE YOUR FEELING FORM*/\n        $('.feel_form').addClass('d-none')\n        /*USER VISUAL FEEDBACK AS TO WHAT CHART IS DISPLAYED*/\n        selected_chart($(this))\n\n\n        show_country_chart()\n        /*HIDE ANY PREVIOUSLY OPEN DIVS ( CHARTS, MAPS)*/\n        $('.landing_interaction').addClass('d-none')\n        /*DIV F0R DISPLAYING CHARTS*/\n        $('#chart_search').removeClass('d-none')\n        /*SCROLLING TO THE DIV ON MOBILE DEVICES*/\n\n        /*CLEARING ANY PREVIOUSLY DISPLAYED COUNTRIES*/\n        list_of_locations.html('')\n\n        /*@type chart_for OF THE CHART*/\n\n        var chart_for = $(this).data('chart_for')\n\n        if (chart_for === 'country') $('.chart_days').data('chart_for', 'country')\n\n\n        /*@num_of_days HOW MANY DAYS TO DISPLAY ON THE CHART*/\n        /*@num_of_countries HOW MANY  TOP COUNTRIES TO DISPLAY ON THE CHART*/\n        /*@country_code COUNTRY CODE*/\n        var num_of_days = $(this).data('num_of_days')\n        var num_of_countries = $(this).data('num_of_countries')\n        var country_code = $(this).data('country')\n        var country_name = $(this).data('country_name')\n        var county_name = $(this).data('county_name')\n\n        /*to prevent old graph on hover, CLEARING ANY EVENTS ATTACHED TO\n        * PREVIOUSLY ATTACHED CHART*/\n        clear_canvas()\n        /*end of to prevent old graph on hover*/\n\n        var chart_canvas = $('#chart')\n\n        /*AJAX REQUEST TO GET RESULTS*/\n        /*WHEN USER CLICKS charts BUTTON, OR WORLD FEEL PERIODS BUTTON\n        * OR TOP COUNTRY BUTTON WE WILL SEND REQUEST TO SERVER TO GET US DATA\n        * TO DISPLAY */\n\n        $.getJSON('/_chart_data', {\n                num_of_days: num_of_days,\n                num_of_countries: num_of_countries,\n                chart_for: chart_for,\n                country_code: country_code,\n                county_name: county_name,\n                country_name: country_name\n\n            },\n\n            function (data) {\n\n                c_feel = data.c_feels\n\n                c_labels = data.labels\n                feels = data.feels\n                B_colors = data.B_colors\n\n                /*WHEN USER CLICKS ON TOP COUNTRIES,\n                * WE WILL APPEND TOP COUNTRIES FOR USER TO\n                * SEE THEM WITH ADDITIONAL CONTROLS FOR COUNTRY CHARTS(PERIODS OF 30,90,280...DAYS)\n                * THEY WILL DISPLAY WHEN USER CLICKS ON COUNTRY NAME */\n                if (num_of_countries) {\n                    $('.lists').addClass('d-none')\n\n                    list_of_locations.removeClass('d-none')\n                    $.each(data.country_codes, function (key, code) {\n\n                        list_of_locations.append(`\n                            \n                        <li class=\"list-group-item no_border chart  mb-1\"   \n                        title=\"click to see country progress past 7 days\"\n                        data-chart_for=\"country\"\n                        data-country=${code}\n                        data-num_of_days=7\n                        \n                        style=\"border-left: 5px solid ${B_colors[key]}; \n                        border-radius:0\" \n                        \n                        >\n                      <strong style=\"color: ${B_colors[key]}\">${feels[key]}</strong>&nbsp;   ${c_labels[key]}  \n                      \n                    </li> \n                        <li class=\"controls d-none list-group-item no_border mb-1  text-center\" data-c_code=${code}>\n                      <span class=\"gl_btn_round country\"  \n                      title=\"click to see  progress past 30 days\"\n                        data-chart_for=${chart_for}\n                        data-country=${code}\n                        data-num_of_days=30>30</span> \n                        <span class=\"gl_btn_round country\"\n                        title=\"click to see progress past 90 days\"\n                         data-chart_for=${chart_for}\n                        data-country=${code}\n                        data-num_of_days=90>90</span> \n                        <span class=\"gl_btn_round country\" \n                        title=\"click to see progress past 180 days\"\n                         data-chart_for=${chart_for}\n                        data-country=${code}\n                        data-num_of_days=180>180</span>\n                         <span class=\"gl_btn_round country\" \n                         title=\"click to see progress past 360 days\"\n                         data-chart_for=${chart_for}\n                        data-country=${code}\n                        data-num_of_days=360>360</span>\n                        \n                         <hr>\n                    <a  href=\"/${code}\" id='${code}' class=\"gl_button green text-center p-2 \" >\n                        <span class=\"smaller_h\">EXPLORE MORE</span>\n                       \n                        </a>\n                      \n                    </li>\n                   \n                   `)\n                    })\n                }\n                /*NEED TO ADD EVENT LISTENER TO NEWLY RENDERED COUNTRIES\n                * SO THAT WHEN USER CLICKS ON ANY COUNTRY WE WILL DISPLAY\n                * CHART FOR THAT PERIOD OF DAYS*/\n                $('.chart').on('click', function () {\n\n                    // render_country_chart($(this), num_of_countries)\n\n                    show_country_chart()\n                    selected_chart($(this))\n                    /*HIDE PREVIOUSLY ADDED BUTTONS*/\n                    $('.controls').addClass('d-none')\n\n                    /*show buttons to select duration of charts in days*/\n                    $(`[data-c_code=${$(this).data('country')}]`).removeClass('d-none');\n\n                    num_of_days = $(this).data('num_of_days')\n                    country_code = $(this).data('country')\n\n                })\n                $('.country').on('click', function () {\n                    render_country_chart($(this), num_of_countries)\n                })\n\n\n                // RENDERING CHART FOR WORLD PROGRESS AND TOP COUNTRIES\n                render_chart(chart_canvas, chart_for, feels, c_labels, B_colors, num_of_countries, num_of_days,\n                    chart_for === 'county' ? county_name : country_name)\n\n\n            });\n\n\n    })\n\n\n    function render_country_chart(this_, num_of_countries) {\n\n        show_country_chart()\n        selected_chart(this_)\n        /*HIDE PREVIOUSLY ADDED BUTTONS*/\n        $('.controls').addClass('d-none')\n\n        /*show buttons to select duration of charts in days*/\n        $(`[data-c_code=${this_.data('country')}]`).removeClass('d-none');\n\n        var num_of_days = this_.data('num_of_days')\n        var country_code = this_.data('country')\n\n        /*GETTING DATA FROM SERVER*/\n        $.getJSON('/_chart_data', {\n\n                num_of_days: num_of_days,\n                chart_for: 'country',\n                country_code: country_code\n\n            },\n\n            function (data) {\n\n                c_labels = data.labels\n                feels = data.feels\n                B_colors = data.B_colors\n                country_name = data.country_name\n                counties = data.counties\n\n\n                /*to prevent old graph on hover*/\n                clear_canvas()\n                /*end of to prevent old graph on hover*/\n\n\n                // RENDERING CHART FOR COUNTRY PROGRESS\n                render_chart($('#chart'), 'country', feels, c_labels, B_colors, num_of_countries, num_of_days, country_name)\n\n\n            });\n    }\n\n    function render_chart(chart_canvas, chart_for, feels, c_labels, B_colors, num_of_countries, num_of_days, location_name) {\n\n\n        var chart = new Chart(chart_canvas, {\n            type: chart_for === 'countries' ? 'bar' : 'line',\n            data: {\n                labels: c_labels,\n                datasets: [\n                    {\n                        label: chart_for === 'countries' || chart_for === 'country' ? \"Country feel\" : chart_for === 'county' ? 'County feel' : \"World feel\",\n                        backgroundColor: chart_for === 'countries' ? B_colors : [],\n                        data: feels,\n                        fill: false,\n                        borderColor: \"#177199\",\n                    }\n                ]\n            },\n            options: {\n                legend: {display: false},\n                title: {\n                    display: true,\n                    text: chart_for === 'countries' ? `Top ${num_of_countries} countries ` : `${chart_for === 'world' ? 'World' : location_name.replace(/\\__/g, ' | ').replace(/\\_/g, ' ')}   feel past ${num_of_days} days `\n                }\n            }\n        });\n\n        chart.render()\n\n    }\n\n    function clear_canvas() {\n        /*to prevent old graph on hover*/\n        $(\"canvas#chart\").remove();\n        $(\"div#chart_holder\").append('<canvas id=\"chart\"></canvas>');\n        /*end of to prevent old graph on hover*/\n    }\n\n    /*visual feedback to user that this type of chart is selected*/\n    function selected_chart(this_) {\n        $('.chart').removeClass('gl_selected')\n        this_.addClass('gl_selected')\n    }\n\n    function show_country_chart() {\n\n        $('#map_holder').addClass('d-none')\n        $('#chart_holder').removeClass('d-none')\n    }\n\n    /*USER CAN SELECT WORLD CHARTS OR COUNTRIES CHARTS NEXT TO THE CHARTS*/\n    $('.chart_type').on('click', function () {\n\n\n        var oposite_charts = {world_controls: 'countries_controls', countries_controls: 'world_controls'}\n        var current = $(this).data('chart_type')\n        list_of_locations.html('')\n\n        /*CHANGING APPEARANCE OF BUTTONS*/\n        $(`[data-chart_type=${oposite_charts[current]}]`).addClass('opaque');\n        $(`[data-chart_type=${current}]`).removeClass('opaque');\n\n        /*DISPLAYING, HIDING CHARTS CONTROLS*/\n\n        $('#' + current).removeClass('d-none')\n        $('#' + oposite_charts[current]).addClass('d-none')\n    })\n})()\n\n//# sourceURL=webpack:///./gl_modules/charts/static/js/charts.js?");

/***/ }),

/***/ "./gl_modules/landing/static/src/js/landing.js":
/*!*****************************************************!*\
  !*** ./gl_modules/landing/static/src/js/landing.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("$(function () {\n    $('#posts').on('click', function () {\n        /*HIDE ANY PREVIOUSLY OPEN DIVS ( CHARTS, MAPS)*/\n        $('.landing_interaction').addClass('d-none')\n        $('.feel_form').addClass('d-none')\n        /*AND FOR MOBILE DEVICES WE NEED TO SCROLL TO SEARCH RESULTS*/\n        $('#post_search').toggleClass('d-none');\nscroll_into_view()\n\n    })\n /*CLICKING ON write BUTTON UNDER THE GLOBE TO SEE FORM ON MOBILE DEVICES*/\n    $('.write_post').on('click', function () {\n        $('.feel_form').removeClass('d-none')\n        $('.landing_interaction').addClass('d-none')\n       scroll_into_view()\n    })\n\n    /*CLICKING ON map BUTTON UNDER THE GLOBE TO SEE MAP*/\n    $('#map').on('click', function () {\n        /*HIDE ANY PREVIOUSLY OPEN DIVS ( CHARTS, MAPS)*/\n        $('.landing_interaction').addClass('d-none')\n        $('.feel_form').addClass('d-none')\n\n        /*SHOW DIV WITH MAP*/\n        var map_search = $('#map_search')\n        map_search.removeClass('d-none')\n\n      scroll_into_view()\n\n    })\n\n    function scroll_into_view() {\n if (screen.width < 768) $('#posts').get(0).scrollIntoView(1, 'slow')\n    }\n})\n\n\n\n\n\n//# sourceURL=webpack:///./gl_modules/landing/static/src/js/landing.js?");

/***/ }),

/***/ "./gl_modules/map/static/src/js/map_loader.js":
/*!****************************************************!*\
  !*** ./gl_modules/map/static/src/js/map_loader.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function () {\n\n\n        var country_feels\n        var people\n        var paths = $('path')\n        var svg_map = 'world'\n       var countries=[]\n        var counter = 0\n        /*IF WE ARE ON LANDING PAGE, WE WILL LOAD FEELINGS DATA INTO\n        * #THE MAP , AND APPLY DIFFERENT COLOR TO COUNTRIES,\n        * ACCORDING TO THEIR FEELING RATING. OTHERWISE, WE ARE ON SIGN UP PAGE AND WE DON'T NEED\n        * COLORFUL MAP*/\n        if (window.location.pathname === '/') {\n            $.ajax({\n                url: '/_world_feel',\n                // data: $('form').serialize(),\n                type: 'POST',\n                success: function (response) {\n\n\n                    country_feels = response.feels\n                    people = response.total_people\n\n\n                    $.each(paths, function (key, value) {\n\n                        $(this).data('people', people[$(this).attr('id')]);\n\n                        var feel = country_feels[$(this).attr('id')]\n                        var c_name = $(this).data('cn2') ? $(this).data('cn2') : $(this).data('cn')\n                        var cc = $(this).attr('id')\n                        if(countries.indexOf($(this).data('cn')) !== -1) doubles.push($(this).data('cn'))\n\n                        countries[\"'\"+cc+\"'\"  ]= c_name+\",\"\n\n\n                        $(this).data('feel', feel)\n\n                        if (feel < 20) {\n                            $(this).attr('fill', \"#006400\")\n                            $('#r_20').append(select_location_link(c_name, feel, cc))\n                        } else if (feel < 40) {\n                            $(this).attr('fill', '#20B2AA')\n                            $('#r_40').append(select_location_link(c_name, feel, cc))\n                        } else if (feel < 60) {\n                            $(this).attr('fill', '#66FF00')\n                            $('#r_60').append(select_location_link(c_name, feel, cc))\n                        } else if (feel < 80) {\n                            $(this).attr('fill', '#40E0D0')\n                            $('#r_80').append(select_location_link(c_name, feel, cc))\n                        } else if (feel <= 100) {\n                            $(this).attr('fill', '#FFFF00')\n                            $('#r_100').append(select_location_link(c_name, feel, cc))\n                        } else {\n                            $(this).attr('fill', '#eeeeee')\n\n                        }\n\n                        $('#r_all').append(select_location_link(c_name, feel, cc))\n                    });\n\n\n                },\n                error: function (error) {\n                    console.log('we could not load data');\n                }\n            });\n        }\n\n        /*SIGN UP PAGE...*/\n        else {\n            $.each(paths, function (key, value) {\n\n\n                var c_name = $(this).data('cn2') ? $(this).data('cn2') : $(this).data('cn')\n                var cc = $(this).attr('id')\n\n                $(this).attr('class', 'select_location')\n                $(this).data('level', 'country')\n                $(this).data('location', c_name)\n                $(this).data('cc', $(this).attr('id'))\n\n                $('#r_all').append(select_location_link(c_name, 'sign_up', cc, 'country'))\n            });\n        }\n\n\n        /*MAP HOVER INTERACTIVITY*/\n        map_interactivity()\n\n\n\n        /*CLICKING ON COLORFUL LEGEND TO GET LOCATIONS IN RANGE*/\n        $('.map_color_legend,.show_list').on('click', function () {\n\n            /*POPUP WITH COUNTIES/ STATES*/\n            show_list($(this))\n            /*LINKS IN POPUP ARE NOT IN THE DOM YET WHEN WE ARE LOADING PAGE,\n            * SO WE NEED TO ATTACH CLICK LISTENER AFTER THEY ARE IN THE DOM*/\n            $('.select_location').on('click', function () {\n\n                select_location($(this))\n            })\n\n        })\n\n        /*LINKS IN THE MAP ARE IN THE DOM WHEN WE ARE LOADING PAGE*/\n        $('.select_location').on('click', function () {\n\n            select_location($(this))\n        })\n\n        /*LINK TO APPEND TO LOCATION LIST POPUP*/\n        function select_location_link(c_name, feel, cc, level = null) {\n\n            /*IF WE ARE ON SIGN UP PAGE, WE NEED TO ADD LOCATION NAME TO INPUT FIELD*/\n            if (feel === 'sign_up') {\n                return `<span class=\"list-group-item no_padding\"  >\n                             <a \n                             href=\"#\"\n                                title=\"click to select\"\n                                class=\"locations_list select_location\" \n                                data-cc=\"${cc}\"\n                               \n                                data-location=\"${c_name}\"\n                                data-level=\"${level}\">\n                                \n                               \n                                 ${display_name(c_name)}</a><br>\n\n                        </span>  `\n            }\n            /*IF WE ARE ON LANDING PAGE, WE WILL REDIRECT TO SELECTED\n            * COUNTRY PAGE*/\n            else {\n                return `<span class=\"list-group-item no_padding\">\n                             <a \n                             href=\"/${cc}\"\n                               title=\"click to visit\"\n                                class=\"locations_list\" \n                                data-country_name=\"${c_name}\">\n                                \n                                ${parseFloat(feel).toFixed(2)} \n                                - ${display_name(c_name)}</a><br>\n\n                        </span>  `\n            }\n\n        }\n\n        /*WHEN USER CLICKS ON MAP */\n        function select_location($_this) {\n            /*COUNTRY CODE*/\n            var cc = $_this.data('cc')\n\n            /*LEVEL country, county*/\n            var level = $_this.data('level')\n\n            /*location name..*/\n            var location = $_this.data('location')\n\n\n            /*WE WILL LOAD SELECTED COUNTRY MAP AND ADD SELECTED COUNTRY TO INPUT FIELD*/\n            if (level === 'country') {\n                $('#country_name').val(location)\n                $('#cc').val(cc)\n                $('#r_all').html('')\n\n                /*LOADING DIMENSIONS OF THE MAP WITH LOCATIONS NAMES FROM DB AND\n                * PUTTING IT TOGETHER ON THE FLY HERE*/\n                $.getJSON('/load_map',\n                    {\n                        cc: cc\n                    },\n                    function (response) {\n                        /*STARTING WITH SOME TEXT INPUT FOR CURRENTLY HOVERED LOCATION AND\n                        * 2 BUTTONS\n                        *\n                        * ONE TO SHOW LIST OF LOCATIONS AND SECOND TO RELOAD WORLD MAP*/\n                        var new_map = `\n                            <div class=\"row no-gutters\" >\n                    <div class=\"col-md-6 map_info text-center border_green border_bottom_only p-2 d-flex justify-content-around align-items-center\">\n                        <span id=\"current\">Hover over map to see county name\n                       </span>\n                    </div>\n                    <div  data-range=\"all\" title=\"see the list\"\n                            class=\"col-md-6 p-2 show_list text-center border_green border_bottom_only d-flex justify-content-around align-items-center\">\n                        <span><i class=\"fas fa-list\"></i></span><br>\n                        <span class=\"text-center\">or select location from the list</span>\n                       \n\n                    </div>\n                        <span class=\"reload d-flex justify-content-around\" title=\"reload map\"><i class=\"fas fa-redo  pt-1\" ></i></span>\n                </div>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"country_map\" data-cy=\"country_map\" x=\"0\" y=\"0\" \n                        baseProfile=\"tiny\" viewBox=\"0 0 660 447\" xml:space=\"preserve\">`\n\n\n                        /*FOR EACH PIECE OF MAP \"COUNTY\" WE WILL ASSIGN\n                        * CLASS FOR INTERACTIONS AND DATA LIKE LEVEL AND COUNTY NAME*/\n                        $.each(response.c_map, function (index, map_) {\n                            var county = Object.keys(map_)[0]\n                            var d = map_[county]\n\n\n                            $('#r_all').append(select_location_link(county, 'sign_up', cc, 'county'))\n\n\n                            new_map += `<path data-cy=\"${county}\" id=\"${county}\" \n                                title=\"click to select\"\n                                class=\"locations_list select_location\" \n                               \n                                data-location=\"${county}\"\n                                data-level=\"county\"\n                                fill=\"#66FF00\" \n                                stroke=\"#177199\" \n                                stroke-width=\".25\" d=\"${d}\"/>`\n\n\n                        })\n                        /*CLOSE UP SVG ELEMENT*/\n                        new_map += `</svg> `\n\n                        svg_map = 'country_map'\n\n                        /*ASSIGN NEWLY CREATED MAP TO map_sign_up DIV*/\n                        $('#map_sign_up').html(new_map)\n\n                        /*ADD MAP INTEARCTIVITY*/\n                        map_interactivity()\n\n                        /*EVERY PATH (COUNTY OR COUNTRY) HAS THIS CLASS\n                        * SO WHEN CLICKED WE WILL SELECT THIS MAP AND\n                        * UPDATE FORM INPUT FIELDS WITH COUNTRY AND COUNTY SELECTED*/\n                        $('.select_location').on('click', function () {\n\n                            select_location($(this))\n                        })\n\n                        /*SELECTING LOCATIONS IN RANGE*/\n                        $('.map_color_legend,.show_list').on('click', function () {\n\n\n                            show_list($(this))\n                            /*LINKS IN POPUP ARE NOT IN THE DOM YET WHEN WE ARE LOADING PAGE,\n                            * SO WE NEED TO ATTACH CLICK LISTENER AFTER THEY ARE IN THE DOM*/\n                            $('.select_location').on('click', function () {\n\n                                select_location($(this))\n                            })\n\n                        })\n\n                        /*RELOADING WORLD MAP*/\n                        $('.reload').on('click', function () {\n                            window.location.reload();\n                        })\n\n                    })\n            }\n            /*IF WE ARE ON COUNTY MAP, WE WILL ADD COUNTY NAME TO INPUT FIELD*/\n            else if (level === 'county') {\n\n                /*FORM INPUT FIELD VALUE OF CURRENTLY SELECTED LOCATION*/\n                $('#county_name').val(display_name(location))\n\n                /*RESET ANY PREVIOUSLY SELECTED LOCATION*/\n                $('path').attr('fill', '#66FF00')\n\n                /*WE WILL CHANGE COLOR OF SELECTED LOCATION*/\n                $(\"[data-location='\" + location + \"']\").attr('fill', '#20B2AA')\n                if (screen.width < 768) $('.globi_logo').get(0).scrollIntoView(1, 'slow')\n\n            }\n            swal.close()\n\n\n        }\n\n        /*POPUP WITH CURRENTLY SELECTED MAP LOCATIONS*/\n        function show_list($_this) {\n            var list_of_locations = $('#r_' + $_this.data('range'))\n\n            $('.' + $_this.data('range')).remove()\n            list_of_locations.append(`\n\n                    <span class=\"gl_button mt-2 d-print-none ${$_this.data('range')}\" \n                    onclick=\"swal.close()\" title=\"close\"> close</span>\n                    \n                    <span class=\"gl_button save_list d-print-none ${$_this.data('range')}\" \n                    title=\"save list\" onclick=\"window.print()\"><i class=\"fas fa-save\"></i></span>\n                    \n                    <hr class=\"${$_this.data('range')} d-print-none\">\n                    \n                    <small class=\"blue ${$_this.data('range')} d-print-none\">\n                    click on link to see country </small>`)\n\n\n            list_of_locations.prepend(`<img  class=\"d-none d-print-block\" src=\"/assets/dist/images/gloptopus_logo.gif\"/>`)\n\n            Swal.fire({\n\n                html: list_of_locations.html(),\n                showConfirmButton: false\n            })\n        }\n\n        /*JUST STRING REPLACE FOR LOCATION NAME*/\n        function display_name(location) {\n            return location.replace(/\\__/g, ' | ').replace(/\\_/g, ' ')\n        }\n\n        /*LOCATION NAME:\n        *   IT COULD BE COUNTRY NAME WITH ONE OR TWO TRANSLATIONS\n        * OR COUNTY NAME*/\n        function location_name(_this) {\n            if (_this.data('cn2')) return _this.data(\"cn2\")\n            else if (_this.data('cn')) return _this.data(\"cn\")\n            else if (_this.data('location')) return _this.data(\"location\")\n        }\n\n        /*MAP INTERACTIVITY ON MOUSEENTER, MOUSELEAVE, CLICK*/\n        function map_interactivity() {\n            $('path')\n                .on('mouseenter',\n                    function () {\n\n                        $(this).attr('stroke', \"red\").attr('stroke-width', 2)\n                        $('#current').html(display_name(location_name($(this))))\n\n                    })\n                .on('mouseleave',\n                    function () {\n                        $(this).attr('stroke', \"#177199\").attr('stroke-width', 0.25)\n\n\n                    })\n                .on('click',\n                    function () {\n                        $('#map_info').removeClass('d-flex align-content-around flex-wrap')\n                        $('#current_info').html(`\n                   \n                   <span class=\"blue\">country :</span> <br><span class=\"smaller_h text-wrap\"> ${location_name($(this))} </span><br>\n                \n                    <span class=\"blue\"> total globers : </span> <span class=\"smaller_h\"> \n                      ${new Intl.NumberFormat(navigator.language).format($(this).data('people'))} \n                     </span>\n                  \n                     <span class=\"smaller_h user_heart country d-flex justify-content-center align-items-center\"> \n                        ${new Intl.NumberFormat(navigator.language).format($(this).data('feel'))} </span>\n                      \n                       <br>\n                         <a  href=\"/${$(this).attr('id')}\" id='${$(this).attr('id')}' class=\"gl_button green text-center p-3 text-wrap\" >\n                        <span class=\"smaller_h pb-3\">EXPLORE MORE</span>\n                       \n                        </a>\n                        <hr>\n                `)\n                    });\n        }\n\n        /*ZOOMING AND PANING FOR SVG MAP*/\n        var MapControl = new SVGPanZoom(document.getElementById(svg_map), {\n            eventMagnet: null,\n            // zoom options\n            zoom: {\n                factor: 0.25,\n                minZoom: 1,\n                maxZoom: 20,\n                events: {\n                    mouseWheel: true,\n                    doubleClick: true,\n                    pinch: true\n                },\n                callback: function callback(multiplier) {\n                }\n            },\n        });\n        $('.map_controls').on('click', function () {\n\n            var action = $(this).data('action')\n            if (action === 'zoomIn') MapControl.zoomIn()\n            if (action === 'zoomOut') MapControl.zoomOut()\n            if (action === 'panLeft') MapControl.panLeft()\n            if (action === 'panRight') MapControl.panRight()\n            if (action === 'panUp') MapControl.panUp()\n            if (action === 'panDown') MapControl.panDown()\n            if (action === 'reset') MapControl.reset()\n        })\n    }\n\n)()\n\n\n\n\n\n//# sourceURL=webpack:///./gl_modules/map/static/src/js/map_loader.js?");

/***/ }),

/***/ "./gl_modules/posts/static/js/posts.js":
/*!*********************************************!*\
  !*** ./gl_modules/posts/static/js/posts.js ***!
  \*********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _shared_static_js_swal_toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/static/js/swal_toast */ \"./gl_modules/shared/static/js/swal_toast.js\");\n\n\n\n/*FUNCTIONS FOR SEARCH AND INTERACTION WITH POSTS\n*\n* USER CAN:\n*           1. LIKE  ACTIONS\n*           2. ADD ANY OF THE ACTIONS TO HIS FEELIST\n*           3. FLAG ACTION AS INAPPROPRIATE\n*           4. SEARCH FOR POSTS\n* */\n$(function () {\n\n    /*GETTING LATEST POSTS ON INITIAL PAGE LOAD,\n    * IF WE ARE ON COUNTRY PAGE, WE WILL RENDER\n    * POSTS FROM THAT COUNTRY, IF ON LANDING PAGE\n    * POSTS FROM THE WORLD\n    *\n    * TO DO: GET POSTS ACCORDING TO BROWSER LANGUAGE,\n    *       ADD LANGUAGE TO USER OBJECT AND POST ITSELF*/\n\n\n    $('#search,#c_search').on('click', function () {\n\n        /*AJAX REQUEST TO GET RESULTS*/\n        $.getJSON('/_search', {\n                q: $('input[name=\"search_field\"]').val(),\n                cc: $(this).data('cc')\n\n            },\n\n            function (data) {\n\n\n                var results = $(\"#search_results\").html('');\n                if (screen.width < 768) results.get(0).scrollIntoView();\n\n                /*WE HAVE NO RESULTS*/\n                if (data.result.length === 0) {\n\n                    results.prepend(` \n                <p class=\" feelist_title text-center\"> There are no results for how you feeling now! <br>\n                Be first to write post about : <br>\n                    <span class=\"blue\">${$('input[name=\"search_field\"]').val()}</span>  \n                    \n                    </p>\n                        `)\n\n                    $('.first_post').removeClass('d-none')\n\n                }\n                /*WE HAVE RESULTS*/\n                else {\n                    $('.first_post').addClass('d-none')\n\n                    render_posts(data.result)\n                }\n\n\n                /*APPENDING EVENT LISTENERS AFTER RENDERING SEARCH RESULTS\n                * AFTER AJAX CALL*/\n                add_listeners(data.authorized_user, data.feelists)\n\n\n            });\n\n\n    });\n\n\n    /*APPENDING EVENT LISTENERS ON PUBLIC USER PAGE\n               * NOT AJAX CALL*/\n    if (window.location.pathname.includes('/user/')) {\n        $.getJSON('/is_authorized', {}, function (is_authorized) {\n            var authorized_user = is_authorized.user\n            var feelists = is_authorized.feelists\n\n            $('.add_to_feelist').on('click', function () {\n\n                add_to_feelist($(this), authorized_user, Object.keys(feelists))\n            })\n\n            /*BY CLICKING ON HEARTH ICON TO LIKE OR FLAG ICON TO FLAG\n            * ACTION AS INAPPROPRIATE WE WILL UPDATE DB*/\n            $('.gl_action').on('click', function () {\n\n                post_action($(this), authorized_user);\n            })\n\n            /*USER CAN ADD ANOTHER USER INTO HIS GLOB TO SEE POSTS FROM THIS USER*/\n            $('.add_to_glob,.remove_from_glob').on('click', function () {\n\n                globe_action($(this), authorized_user)\n            })\n        })\n\n\n    }\n\n\n    /*ADDING OR REMOVING USER FROM MyGlobe*/\n    function globe_action($_this, authorized_user) {\n        var user_id = $_this.data('user_id')\n        var user_name = $_this.data('user_name')\n        var user_action = $_this.data('user_action')\n        if (!authorized_user) {\n            please_login()\n        } else {\n            $.getJSON('/glob_action',\n                {\n                    user_id: user_id,\n                    user_action: user_action\n                },\n                function (response) {\n\n                    if (response.text === 'success' && user_action === 'added_to_glob') {\n                        $('.added_to_glob' + user_id).addClass('d-none')\n                        $('.removed_from_glob' + user_id).removeClass('d-none')\n\n                        happy_toast(`${user_name} was added!`)\n\n                    } else if (response.text === 'success' && user_action === 'removed_from_glob') {\n                        $('.added_to_glob' + user_id).removeClass('d-none')\n                        $('.removed_from_glob' + user_id).addClass('d-none')\n\n                        sad_toast(`${user_name} was removed!`)\n\n                    }\n\n                })\n        }\n    }\n\n    function please_login() {\n        swal.fire({\n            html: `\n                                Please \n                                <a class=\"\" href=\"/sign_in\">Sign in </a>\n                                or\n                                <a class=\"\" href=\"/sign_up\">Sign up </a>\n                                to continue.\n                                <hr class=\"bg_blue\">\n                                <button class=\"gl_button smaller_h\" onclick=\"swal.close();\">ok</button>\n                            `,\n            showConfirmButton: false\n        })\n    }\n\n    /*SENDING AJAX REQUEST TO SERVER TO UPDATE USER'S LIKES,FLAGS,FEELISTS...*/\n    function post_action($_this, authorized_user) {\n\n        var post_id = $_this.data('id')\n        var action = $_this.data('action')\n\n        var checked_feelist = $(\"input[name='feelist']:checked\")\n        var feelist_name = checked_feelist.data('feelist');\n        var new_feelist = checked_feelist.data('new_feelist');\n\n\n\n        if (!authorized_user) please_login()\n\n        /*WHEN USER ADDING ACTION TO HIS FEELIST AND HE DOESN'T SELECT ANY FEELIST\n        * OR HE CHECKS NEW FEELIST BUT DOESN'T TYPE IN NEW FEELIST NAME\n        * WE WILL NOT PROCEED , BUT NOTIFY HIM THAT HE NEEDS TO SELECT FEELIST*/\n        else if (action === 'additions' && (feelist_name === undefined || feelist_name.length === 0)) {\n            $(\"#no_feelist\").removeClass('d-none')\n        }\n        /*ALL GOOD => FEELIST SELECTED*/\n        else {\n            /*CLOSING ALERT WITH USER'S FEELISTS*/\n            $('#feelist_saved').text('saved').addClass('gl_button')\n            $('.save_feelist').addClass('d-none')\n\n            /*AJAX REQUEST TO PERFORM THE ACTION*/\n            $.getJSON(\n                '/_actions',\n                {\n                    post_id: post_id,\n                    action: action,\n                    feelist_name: feelist_name,\n                    new_feelist: new_feelist\n\n                },\n                function (data) {\n\n                    /*IF USER IS NOT AUTHORIZED*/\n                    if (data.result === \"not_authorized\") {\n                        please_login()\n                    }\n                    /*IF USER ALREADY LIKED OR ADDED ACTION\n                    * WE WILL NOTIFY HIM*/\n                    else if (data.result === \"already_added\") {\n                        swal.fire({\n                            html: `\n                               \n                               \n                               <span class=\"smaller_h\">pssst.... you already ${action === 'likes'\n                                ? `liked` : `${action === 'flags' ? `flagged` : `added`}`\n                            } it ...;)</span>\n                                <hr class=\"bg_purple\">\n                                <button class=\"gl_button smaller_h bg_purple\" onclick=\"swal.close();\">ok</button>\n                            `,\n                            showConfirmButton: false\n                        })\n                    }\n                    /*ELSE WE WILL INCREASE THE NUMBER ON LIKES /ADDITIONS ON THE\n                    * PAGE, TO GIVE USER INSTANT FEEDBACK*/\n                    else {\n\n                        var action_el = $('#' + action + '_' + post_id)\n                        if (action === 'likes') {\n                            action_el.text(parseInt(action_el.text()) + 1)\n                                .addClass('blue bg-warning p-1')\n                                .prop('disabled', 'disabled')\n                        }\n\n\n                        happy_toast(`${action === 'likes'\n                            ? `liked` : `${action === 'flags' ? `flagged` : `added`}`\n                        }!`)\n\n                    }\n\n                });\n        /*USER FEEDBACK ON CHOOSING THE ACTION*/\n        if (action === 'flags') $_this.addClass('text-warning')\n        if (action === 'likes') $_this.addClass('text-danger')\n        if (action === 'additions') window.location.reload()\n        }\n\n\n    }\n\n    /*ACTION TO ADD POST TO FEELIST, SHOWING USERS FEELISTS IN POPUP, SO HE CAN CHOOSE ONE OF EXISTING\n    * FEELISTS OR CREATE NEW ONE*/\n    function add_to_feelist($_this, authorized_user, feelists) {\n\n        var post_id = $_this.data('id')\n\n        var action = $_this.data('action')\n\n        if (!authorized_user) {\n            please_login()\n\n        } else {\n\n            /*creating list with user's feelists, so he can choose\n            * where to add new action to*/\n            var feelist_div = \"\"\n            if (feelists.length) {\n                for (var list in feelists) {\n                    feelist_div += `<div class=\"input-group mb-3\">\n                                            <div class=\"input-group-prepend\">\n                                                <div class=\"input-group-text bg-transparent border_bottom_only\">\n                                                    <input type=\"radio\" name=\"feelist\" class=\"feelist_check\"\n                                                           value=\"${feelists[list]}\" data-feelist=\"${feelists[list].replace(/ /g, '_')}\">\n                                                </div>\n                                            </div>\n                                            <label class=\"feelist form-control border_bottom_only ${feelists[list].replace(/ /g, '_')}\"\n                                             for=\"${feelists[list]}\" >${feelists[list]}</label>\n                                        </div>`\n                }\n            }\n\n\n            swal.fire({\n                width: 200,\n                showConfirmButton: false,\n                html: `\n                           <div class=\"row\">\n                           <div class=\"col-md-12\">\n                           <h4 class=\"smaller_h\" id=\"add_to\">add to</h4>\n                           \n                                <small>one of your feelists or create new one</small> <hr>\n                           <h4 class=\"smaller_h d-none bg_purple text-light\" id=\"no_feelist\">feelist ?</h4>\n                     \n                            </div>\n                                <ul class=\"list-group\">\n            \n                                       ${feelist_div}\n                                        \n                                        <!-- user can create new feelist-->\n                                        <div class=\"input-group mb-3\">\n                                            <div class=\"input-group-prepend\">\n                                                <div class=\"input-group-text bg-transparent border_bottom_only\">\n                                                    <input type=\"radio\" data-new_feelist=\"true\" data-cy=\"new_feelist_check\"\n                                                           name=\"feelist\" id=\"new\" data-feelist=\"\" >\n                                                </div>\n                                            </div>\n                                           <input type=\"text\" class=\"form-control border_bottom_only  form_label\"  data-cy=\"new_feelist_name\"\n                                            id=\"new_feelist\" name=\"new_feelist\"    placeholder=\"create new\">\n                                        </div>\n            \n                                    \n                                </ul>\n                                <button class=\"gl_button gl_action save_feelist\" data-cy=\"new_feelist_save\"\n                                data-id=\"${post_id}\" data-action=${action}\n                                \n                                >save</button>\n                                <span id=\"feelist_saved\" class=\"text-center\" onclick=\"swal.close()\" ></span>\n                                \n                            </div>\n                            `\n            })\n\n        }\n\n        /*USER COLOR FEEDBACK ON SELECTING FEELISTS*/\n        $('#new').on('click', function () {\n            $('.feelist').removeClass('bg_blue text-light')\n            $('#new_feelist').addClass('border_purple')\n            $('#no_feelist').addClass('d-none')\n        })\n        $('.feelist_check').on('click', function () {\n            $('.feelist').removeClass('bg_blue text-light')\n            $('#new_feelist').removeClass('border_purple')\n            $('#no_feelist').addClass('d-none')\n            $('.' + $(this).data('feelist')).addClass('bg_blue text-light')\n        })\n        /*BY CLICKING ON save BUTTON HE CAN SAVE ACTION TO HIS FEELIST*/\n        $('.save_feelist').on('click', function () {\n            post_action($(this), authorized_user);\n\n\n        })\n\n        /*WHEN GLOBBER IS CREATING NEW FEELIST, WE ARE APPENDING NAME OF THE FEELIST TO data-feelist\n        * ATTRIBUTE ON RADIO BUTTON SO THAT WE CAN RETRIEVE IT IN perform_action()\n        * FUNCTION AND SAVE ACTION TO NEWLY CREATED FEELIST*/\n        $('#new_feelist').on('input', function () {\n            $('#new').data(\"feelist\", $(this).val())\n        })\n    }\n\n    function happy_toast(message) {\n        _shared_static_js_swal_toast__WEBPACK_IMPORTED_MODULE_0__[\"Toast\"].fire({\n            html: ` <img  src=\"/assets/dist/images/happy.png\"/>\n                                                    <p class=\"text-success\">${message}</h4> `\n        })\n    }\n\n    function sad_toast(message) {\n        _shared_static_js_swal_toast__WEBPACK_IMPORTED_MODULE_0__[\"Toast\"].fire({\n            html: ` <img  src=\"/assets/dist/images/sad.png\"/>\n                                                    <p class=\"text-danger\">${message}</h4> `\n        })\n    }\n\n    function render_posts(posts) {\n        var counter = 1\n\n        $.each(posts, function (key, post) {\n\n\n            $(\"#search_results\").append(`\n\n                    <div class=\"row mb-2 border_blue_l pt-2\">\n                     \n                     <div class=\"col-md-8 pb-2\">\n                      <span >(When) I feel :</span>  \n                               <span class=\"text-info\" >${post.i_feel.join(' ')}  </span>\n                               <span >because :</span>\n                               <span  class=\"text-info\">${post.because.join(' ')}  </span> <br>\n                        \n                              <span>${post.action}</span> \n                            <br>\n                     ${post.flags === 0 ? ` \n                               \n                            \n                            <i  data-id=\"${post.id}\"  data-action=\"likes\"\n                            class=\"fas fa-heart float-right ml-3 gl_action\" title=\"like it!\" >\n                            <span id=\"likes_${post.id}\" data-cy=\"like_post${counter}\">&nbsp;${post.likes}</span> </i> \n          \n                            <i   data-id=\"${post.id}\"  data-action=\"additions\" data-cy=\"add_post${counter}\"\n                            class=\"fas fa-plus float-right ml-3 add_to_feelist\" title=\"add to your feelist!\">\n                            <span id=\"additions_${post.id}\" ></span>\n                            </i>\n                            <i  data-id=\"${post.id}\"  data-action=\"flags\" data-cy=\"flag_post${counter}\"\n                            class=\"far fa-flag float-right ml-3 gl_action\" title=\"report as inappropriate\">\n                             <span id=\"flags_${post.id}\" ></span>\n                                    </i>\n                        ` : ` <i class=\"fas fa-exclamation-circle float-right ml-3 text-warning\" title=\"like it!\" >\n                            <span id=\"likes_${post.id}\" >under review</span> </i> `}\n                     </div>\n                      \n                            <!--INFO ABOUT GLOBBER-->\n                        <div class=\"col-md-4 \">\n                        \n                            <img class=\"avatar\" src=\"assets/dist/images/avatars/${post.image_id}.png\"/>\n                            <a href=\"/user/${post.user_id}\" class=\"user\">\n                           <span > ${post.name}</span>   <span class=\"user_heart post p-2 m-1\">${post.user_feel}</span>  \n                             </a> \n                              <span class=\"float-right remove_from_glob blue removed_from_glob${post.user_id}\n                             ${post.in_my_glob === 1 ? '' : 'd-none'}\" \n                             data-cy=\"remove_user${counter}\"\n                             data-user_id=\"${post.user_id}\" \n                             data-user_name=\"${post.name}\"\n                             data-user_action=\"removed_from_glob\"\n                             title=\"Remove me from your glob !\">\n                             <i class=\"fas fa-user-minus\"></i>\n                             </span>\n                             <span class=\"float-right add_to_glob blue added_to_glob${post.user_id}\n                            ${post.in_my_glob !== 1 ? '' : 'd-none'}\" \n                             data-user_id=\"${post.user_id}\" \n                             data-cy=\"add_user${counter}\"\n                             data-user_name=\"${post.name}\"\n                              data-user_action=\"added_to_glob\"\n                             title=\"Add me to your glob !\">\n                             <i class=\"fas fa-user-plus\"></i>\n                             </span>\n                             <br>\n                             <span >${post.created_at}</span>\n                              <span ></span>\n                              <hr class=\"p-0 m-1\">\n                        </div>\n                    </div>\n\n\n                `)\n\n\n            counter++\n        })\n    }\n\n    function latest_posts(cc) {\n\n        $('#post_search').removeClass('d-none');\n        $.getJSON('/_search',\n            {\n                q: '',\n                cc: cc\n            },\n            function (latest) {\n\n                render_posts(latest.result)\n                add_listeners(latest.authorized_user, latest.feelists)\n            })\n    }\n\n    /*APPENDING EVENT LISTENERS AFTER RENDERING SEARCH RESULTS\n    * AFTER AJAX CALL*/\n    function add_listeners(authorized_user, feelists) {\n        /*BUTTON + WHEN USER WANTS TO ADD ACTION TO HIS FEELIST WE WILL\n               * FIRE ALERT WITH HIS FEELISTS INTO WHICH HE CAN ADD\n               * THIS ACTION, OR HE HAS OPTION OF CREATING NEW FEELIST\n               * AND ADD ACTION TO NEW FEELIST*/\n        $('.add_to_feelist').on('click', function () {\n\n            add_to_feelist($(this), authorized_user, Object.keys(feelists))\n        })\n\n        /*BY CLICKING ON HEARTH ICON TO LIKE OR FLAG ICON TO FLAG\n        * ACTION AS INAPPROPRIATE WE WILL UPDATE DB*/\n        $('.gl_action').on('click', function () {\n\n            post_action($(this), authorized_user);\n        })\n\n        /*USER CAN ADD ANOTHER USER INTO HIS GLOB TO SEE POSTS FROM THIS USER*/\n        $('.add_to_glob,.remove_from_glob').on('click', function () {\n\n\n            globe_action($(this), authorized_user)\n        })\n    }\n\n    latest_posts($('#c_search').data('cc') ? $('#c_search').data('cc') : '')\n});\n\n\n\n\n//# sourceURL=webpack:///./gl_modules/posts/static/js/posts.js?");

/***/ }),

/***/ "./gl_modules/shared/static/js/feel_meter.js":
/*!***************************************************!*\
  !*** ./gl_modules/shared/static/js/feel_meter.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*FUNCTIONALITY TO SHOW USER FEELINGS ON SLIDE RANGE\n* AND TO CHANGE TEXT ABOVE ACTIONS PART OF THE FORM\n* IF FEELINGS < 51 OR >= 51*/\n $('#slider_result')\n                .css('background',\"url('assets/dist/images/happy.png')\")\n                .css('background-repeat', 'no-repeat')\nfunction feelometer () {\n\n\n\n    $('#feeling').on('change', function () {\n\n        var feelings = this.value;\n\n        $('#feeling_holder').val(feelings);\n\n        if(feelings > 51){\n            $('#this_or_better').removeClass('d-none');\n            $('#better').addClass('d-none');\n            $('#slider_result').html('')\n                .css('background',\"url('assets/dist/images/happy.png')\")\n                .css('background-repeat', 'no-repeat')\n\n\n        }\n        else{\n             $('#this_or_better').addClass('d-none');\n             $('#better').removeClass('d-none');\n             $('#slider_result').html('')\n                .css('background',\"url('assets/dist/images/sad.png')\")\n                .css('background-repeat', 'no-repeat')\n        }\n    })\n\n }\n feelometer ()\n/*assets/dist/images/avatars/${counter % 38}.png*/\n\n//# sourceURL=webpack:///./gl_modules/shared/static/js/feel_meter.js?");

/***/ }),

/***/ "./gl_modules/shared/static/js/form_label.js":
/*!***************************************************!*\
  !*** ./gl_modules/shared/static/js/form_label.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function () {\n    $('.form_label').on(('click','focus'), function () {\n\n        var element_id = $(this).attr('id')\n        var placeholder_text = $(this).prop('placeholder')\n        if($(this).data('label')) {\n            var div = element_id+'_label'\n        }\n        else\n        {\n            div = element_id\n        }\n\n\n        if (placeholder_text !== '' &&  $(\"label[for='\" + element_id + \"']\").text().length === 0) {\n\n            sessionStorage.setItem(element_id,placeholder_text)\n            $(this).prop('placeholder', '')\n            $('#' + div).before(` <label for=${element_id} ><small>${placeholder_text}</small></label>`)\n        }\n\n\n    }).on('input', function () {\n        var element_id = $(this).attr('id')\n\n        var input_field = $('#' + element_id)\n        var label = $(\"label[for='\" + element_id + \"']\")\n\n        if (input_field.val() === '') {\n            input_field.prop('placeholder', sessionStorage.getItem(element_id))\n            label.html('')\n        }\n        else if(input_field.val().length === 1)\n        {\n            label.html(`<small>${sessionStorage.getItem(element_id)}</small>`)\n        }\n\n\n    })\n})()\n\n//# sourceURL=webpack:///./gl_modules/shared/static/js/form_label.js?");

/***/ }),

/***/ "./gl_modules/shared/static/js/swal_toast.js":
/*!***************************************************!*\
  !*** ./gl_modules/shared/static/js/swal_toast.js ***!
  \***************************************************/
/*! exports provided: Toast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Toast\", function() { return Toast; });\n const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 2000,\n        timerProgressBar: true,\n\n    })\n\n//# sourceURL=webpack:///./gl_modules/shared/static/js/swal_toast.js?");

/***/ }),

/***/ 0:
/*!******************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** multi ./gl_modules/landing/static/src/js/landing.js ./gl_modules/shared/static/js/feel_meter.js ./gl_modules/shared/static/js/form_label.js ./gl_modules/posts/static/js/posts.js ./gl_modules/charts/static/js/charts.js ./gl_modules/map/static/src/js/map_loader.js ***!
  \******************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./gl_modules/landing/static/src/js/landing.js */\"./gl_modules/landing/static/src/js/landing.js\");\n__webpack_require__(/*! ./gl_modules/shared/static/js/feel_meter.js */\"./gl_modules/shared/static/js/feel_meter.js\");\n__webpack_require__(/*! ./gl_modules/shared/static/js/form_label.js */\"./gl_modules/shared/static/js/form_label.js\");\n__webpack_require__(/*! ./gl_modules/posts/static/js/posts.js */\"./gl_modules/posts/static/js/posts.js\");\n__webpack_require__(/*! ./gl_modules/charts/static/js/charts.js */\"./gl_modules/charts/static/js/charts.js\");\nmodule.exports = __webpack_require__(/*! ./gl_modules/map/static/src/js/map_loader.js */\"./gl_modules/map/static/src/js/map_loader.js\");\n\n\n//# sourceURL=webpack:///multi_./gl_modules/landing/static/src/js/landing.js_./gl_modules/shared/static/js/feel_meter.js_./gl_modules/shared/static/js/form_label.js_./gl_modules/posts/static/js/posts.js_./gl_modules/charts/static/js/charts.js_./gl_modules/map/static/src/js/map_loader.js?");

/***/ })

/******/ });